$Id$
//No Longer applicable

This document describes the installation of the UMASS-Boston 
Electronic Field Guide (EFG) for development.

Prerequisites:
- Jakarta-tomcat 4.1.18
- JDK 1.4
- Jakarta ant 1.5 

1.Setup Your relational Database and import your data into it.
2. Download a jdbc driver for your database. If it is not already a .jar file, jar the files yourself.
Then copy and place the .jar file under %CATALINA_HOME%\common\lib or anywhere that Tomcat can find it.
For MySQL users there is a jdbc driver that comes with this application(mysqldriver.jar).
 It can be found under efgRDB/lib. You may use it if you wish but remember to put it under %CATALINA_HOME%/common/lib
and nowhere else.

3. We used Tomcat's Database connection Pooling Classes. So if you have not implemented connection pooling in your 
code you may Configure Tomcat as follows. 
cd to %CATALINA_HOME/conf.

Open server.xml in your favorite editor.

Edit the ff xml snippet replacing the: The resource name value with any name of your choice.

ie replace every instance of "jdbc/efgMySQL" with any name of your choice.
Also replace YOUR_JDBC_DRIVER with the name of your jdbc driver
URL_TO_YOUR_DATABASE with the url to your database
YOUR_USERNAME with your real user name
YOUR_PASSWORD with your password that you use to connect to your database.

<Context path="/efg" docBase="efg" debug="5" reloadable="true" crossContext="true">
					<Logger className="org.apache.catalina.logger.FileLogger" prefix="localhost_efg_log." suffix=".txt" timestamp="true"/>
					<Resource name="jdbc/efgMySQL" auth="Container" type="javax.sql.DataSource"/>
					<ResourceParams name="jdbc/efgMySQL">
						<parameter>
							<name>factory</name>
							<value>org.apache.commons.dbcp.BasicDataSourceFactory</value>
						</parameter>
						<parameter>
							<name>driverClassName</name>
							<value>YOUR_JDBC_DRIVER</value>
						</parameter>
						<parameter>
							<name>url</name>
							<value>URL_TO_YOUR_DATABASE</value>
						</parameter>
						<parameter>
							<name>username</name>
							<value>YOUR_USERNAME</value>
						</parameter>
						<parameter>
							<name>password</name>
							<value>YOUR_PASSWORD</value>
						</parameter>
						<parameter>
							<name>maxActive</name>
							<value>20</value>
						</parameter>
						<parameter>
							<name>maxIdle</name>
							<value>10</value>
						</parameter>
						<parameter>
							<name>maxWait</name>
							<value>-1</value>
						</parameter>
					</ResourceParams>
				</Context> 
After doing that your server.xml file should look something like the ff:

<!-- Example Server Configuration File -->
<!-- Note that component elements are nested corresponding to their
     parent-child relationships with each other -->
<!-- A "Server" is a singleton element that represents the entire JVM,
     which may contain one or more "Service" instances.  The Server
     listens for a shutdown command on the indicated port.

     Note:  A "Server" is not itself a "Container", so you may not
     define subcomponents such as "Valves" or "Loggers" at this level.
 -->
<Server port="8005" shutdown="SHUTDOWN" debug="0">
	<!-- Uncomment these entries to enable JMX MBeans support -->
	<Listener className="org.apache.catalina.mbeans.ServerLifecycleListener" debug="0"/>
	<Listener className="org.apache.catalina.mbeans.GlobalResourcesLifecycleListener" debug="0"/>
	<!-- Global JNDI resources -->
	<GlobalNamingResources>
		<!-- Test entry for demonstration purposes -->
		<Environment name="simpleValue" type="java.lang.Integer" value="30"/>
		<!-- Editable user database that can also be used by
         UserDatabaseRealm to authenticate users -->
		<Resource name="UserDatabase" auth="Container" type="org.apache.catalina.UserDatabase" description="User database that can be updated and saved">
    </Resource>
		<ResourceParams name="UserDatabase">
			<parameter>
				<name>factory</name>
				<value>org.apache.catalina.users.MemoryUserDatabaseFactory</value>
			</parameter>
			<parameter>
				<name>pathname</name>
				<value>conf/tomcat-users.xml</value>
			</parameter>
		</ResourceParams>
	</GlobalNamingResources>
	<!-- Define the Tomcat Stand-Alone Service -->
	<Service name="Tomcat-Standalone">
	
		<!-- Define a non-SSL Coyote HTTP/1.1 Connector on port 8081 -->
		<Connector className="org.apache.coyote.tomcat4.CoyoteConnector" port="8080" minProcessors="5" maxProcessors="75" enableLookups="true" redirectPort="8443" acceptCount="100" debug="0" connectionTimeout="20000" useURIValidationHack="false" disableUploadTimeout="true"/>
		
		<!-- Define a Coyote/JK2 AJP 1.3 Connector on port 8009 -->
		<Connector className="org.apache.coyote.tomcat4.CoyoteConnector" port="8009" minProcessors="5" maxProcessors="75" enableLookups="true" redirectPort="8443" acceptCount="10" debug="0" connectionTimeout="20000" useURIValidationHack="false" protocolHandlerClassName="org.apache.jk.server.JkCoyoteHandler"/>
	
		<!-- Define the top level container in our container hierarchy -->
		<Engine name="Standalone" defaultHost="localhost" debug="0">
		
			<!-- Global logger unless overridden at lower levels -->
			<Logger className="org.apache.catalina.logger.FileLogger" prefix="catalina_log." suffix=".txt" timestamp="true"/>
		
			<Realm className="org.apache.catalina.realm.UserDatabaseRealm" debug="0" resourceName="UserDatabase"/>
		
			<!-- Define the default virtual host -->
			<Host name="localhost" debug="0" appBase="webapps" unpackWARs="true" autoDeploy="true">
			
				<Logger className="org.apache.catalina.logger.FileLogger" directory="logs" prefix="localhost_log." suffix=".txt" timestamp="true"/>
			
				<!-- Tomcat Examples Context -->
				<Context path="/examples" docBase="examples" debug="0" reloadable="true" crossContext="true">
					<Logger className="org.apache.catalina.logger.FileLogger" prefix="localhost_examples_log." suffix=".txt" timestamp="true"/>
					<Ejb name="ejb/EmplRecord" type="Entity" home="com.wombat.empl.EmployeeRecordHome" remote="com.wombat.empl.EmployeeRecord"/>
				
					<Environment name="maxExemptions" type="java.lang.Integer" value="15"/>
					<Parameter name="context.param.name" value="context.param.value" override="false"/>
					<Resource name="jdbc/EmployeeAppDb" auth="SERVLET" type="javax.sql.DataSource"/>
					<ResourceParams name="jdbc/EmployeeAppDb">
						<parameter>
							<name>user</name>
							<value>sa</value>
						</parameter>
						<parameter>
							<name>password</name>
							<value/>
						</parameter>
						<parameter>
							<name>driverClassName</name>
							<value>org.hsql.jdbcDriver</value>
						</parameter>
						<parameter>
							<name>driverName</name>
							<value>jdbc:HypersonicSQL:database</value>
						</parameter>
					</ResourceParams>
					<Resource name="mail/Session" auth="Container" type="javax.mail.Session"/>
					<ResourceParams name="mail/Session">
						<parameter>
							<name>mail.smtp.host</name>
							<value>localhost</value>
						</parameter>
					</ResourceParams>
					<ResourceLink name="linkToGlobalResource" global="simpleValue" type="java.lang.Integer"/>
				</Context>
				<Context path="/efg" docBase="efg" debug="5" reloadable="true" crossContext="true">
					<Logger className="org.apache.catalina.logger.FileLogger" prefix="localhost_efg_log." suffix=".txt" timestamp="true"/>
					<Resource name="jdbc/efgMySQL" auth="Container" type="javax.sql.DataSource"/>
					<ResourceParams name="jdbc/efgMySQL">
						<parameter>
							<name>factory</name>
							<value>org.apache.commons.dbcp.BasicDataSourceFactory</value>
						</parameter>
						<parameter>
							<name>driverClassName</name>
							<value>com.mysql.jdbc.Driver</value>
						</parameter>
						<parameter>
							<name>url</name>
							<value>jdbc:mysql://tiger.cs.umb.edu:3306/efg</value>
						</parameter>
						<parameter>
							<name>username</name>
							<value>efg</value>
						</parameter>
						<parameter>
							<name>password</name>
							<value>efg</value>
						</parameter>
						<parameter>
							<name>maxActive</name>
							<value>20</value>
						</parameter>
						<parameter>
							<name>maxIdle</name>
							<value>10</value>
						</parameter>
						<parameter>
							<name>maxWait</name>
							<value>-1</value>
						</parameter>
					</ResourceParams>
				</Context>
			</Host>
		</Engine>
	</Service>
</Server>

NOTE: If you are gonna use Tomcat's connection pooling make sure you have the ff jar files under %CATALINA_HOME%/common/lib

1.commons-dbcp.jar
2.commons-pool.jar

Most Tomcat installations come with these files, but it is good to check if you really have them. If you don't then you need to download them from APACHE website.


4. 
   In a command window, cd to efgRDB\etc and edit web.xml
  	as follows. It is CRITICAL that the
<res-ref-name> value here correspond to the name in the 
<Resource name="jdbc/efgMySQL" auth="Container" type="javax.sql.DataSource"/> 
configured in the server.xml file for your servlet container.

	<resource-ref>
		<description>Your datasource name as configured in server.xml in step 3 above</description>
		<res-ref-name>jdbc/efgMySQL</res-ref-name>
		<res-type>javax.sql.DataSource</res-type>
		<res-auth>Container</res-auth>
	</resource-ref>
	<!--
	***NOTE ****** Configure your environment here. Change values in the <env-entry> to suit your settings. 
       ***PLEASE DO NOT change the entries in <env-entry-name> tags unless you would want to make changes to our source code.***
	-->
	<env-entry>
		<description>The resource reference as confiugured in server.xml</description>
		<env-entry-name>resourceName</env-entry-name>
		<env-entry-value>jdbc/efgMySQL</env-entry-value>
		<env-entry-type>java.lang.String</env-entry-type>
	</env-entry>


5.In a command window, cd to efgRDB, and run "ant deploy". This prepares, compiles 
   and deploys the application. Subsequent recompilations should only need to do 
   this step, turning tomcat off during deployment and back on for testing. 

11.Start tomcat. The default location for the application will be http://localhost:8080/efg.
   Note that it is advisable to stop tomcat during deployment as Windows may otherwise 
   resist files being copied. 

September 26, 2003. Jacob K. Asiedu




