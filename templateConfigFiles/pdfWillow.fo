<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:fo="http://www.w3.org/1999/XSL/Format">
	<!--
  Written by Jacob K. Asiedu
$Id$

		This file is used to generate .fo files from a PLD document.The .fo file is then converted 
	to an unindented  pdf representation of a PLD key by our servlet using Apache's Fop tools. 
	This xsl file is called by a servlet (see project/efg/xsl/PLDServlet.java) with the 
	required parameters(the CSSLocation if any). 
	
	NOTE: The XML document to be transformed to .fo is not the original PLD file. The original PLD file
	is transformed by our servlet to an intermediate XML document, and then this stylesheet is applied.
	-->
	<!--
		Find the number of iterations to be done
	-->
	<!-- 
	match the root. 
	
	22.1  X 27.8 
	-->
	<xsl:include href="commonTaxonPageTemplate.xsl"/>
	<xsl:param name="emptyspace" select="'                                                      '"/>
	<xsl:param name="imageN" select="'images'"/>
	<xsl:param name="sci_name" select="'Scientific name'"/>
	<xsl:param name="fam_name" select="'Family'"/>
	<xsl:param name="com_names" select="'Common names'"/>
	<xsl:param name="pollinator" select="'Pollinator'"/>
	<xsl:param name="sd" select="'Seeds dispersed by'"/>
	<xsl:variable name="number_per_column" select="2"/>
	<xsl:variable name="number_per_page" select="4"/>
	<xsl:param name="constantString" select="'_EFG_'"/>
	<!--
Output a common name
-->
	<xsl:template name="ouputCommonName">
		<xsl:param name="comname"/>
		<xsl:choose>
			<xsl:when test="contains($comname,$constantString)">
				<xsl:variable name="before" select="substring-before($comname,$constantString)"/>
				<fo:block font-weight="bold" text-align="left" start-indent="0.5in" font-size="16pt">
					<xsl:value-of select="$before"/>
				</fo:block>
				
				<xsl:call-template name="ouputCommonName">
					<xsl:with-param name="comname" select="substring-after($comname,$constantString)"/>
				</xsl:call-template>
			</xsl:when>
			<xsl:otherwise>
				<xsl:if test="not(string($comname))=''">
					<fo:block font-weight="bold" text-align="left" start-indent="0.5in" font-size="18pt">
						<xsl:value-of select="$comname"/>
					</fo:block>
				
				</xsl:if>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<!-- output cell -->
	<xsl:template name="output_cell">
		<xsl:param name="imageName"/>
		<xsl:param name="caption"/>
		<xsl:param name="com"/>
		<xsl:param name="fam"/>
		<xsl:param name="pollin"/>
		<xsl:param name="sd"/>
		<xsl:variable name="imageN">
			<xsl:choose>
				<xsl:when test="contains($imageName,'#')">
					<xsl:value-of select="substring-after($imageName,'#')"/>
				</xsl:when>
				<xsl:otherwise>
					<xsl:value-of select="$imageName"/>
				</xsl:otherwise>
			</xsl:choose>
		</xsl:variable>
		<fo:table-cell padding="6pt" border="0.5pt solid black" width="8.8cm" height="12.8cm">
			<fo:block font-size="14pt" text-align="left" font-style="italic" start-indent="0.5in" font-weight="normal">
				<xsl:value-of select="$caption"/>
			</fo:block>
			<fo:block font-size="12pt" text-align="left" start-indent="0.5in" font-weight="normal">
				<fo:inline font-style="normal" font-weight="bold">
					<xsl:value-of select="'Family: '"/>
				</fo:inline>
				<xsl:value-of select="$fam"/>
			</fo:block>
			
			<xsl:if test="contains($com,$constantString)">
				<xsl:call-template name="ouputCommonName">
					<xsl:with-param name="comname" select="$com"/>
				</xsl:call-template>
			</xsl:if>
			<fo:block font-weight="normal" text-align="center">
				<fo:external-graphic height="3.4in" width="2.5in">
					<xsl:attribute name="src"><xsl:value-of select="concat('url(',$serverbase,'/',$imagebase,'/',$imageN,')')"/></xsl:attribute>
				</fo:external-graphic>
			</fo:block>
			<xsl:if test="$pollin">
				<xsl:if test="not(string($pollin))=''">
					<fo:block font-size="14pt" text-align="left" start-indent="0.5in" font-weight="normal">
						<xsl:value-of select="$pollin"/>
					</fo:block>
				</xsl:if>
			</xsl:if>
			<xsl:if test="$sd">
				<xsl:if test="not(string($sd))=''">
					<fo:block font-size="14pt" text-align="left" start-indent="0.5in" font-weight="normal">
						<xsl:value-of select="$sd"/>
					</fo:block>
				</xsl:if>
			</xsl:if>
		</fo:table-cell>
	</xsl:template>
	<xsl:template match="TaxonEntry">
		<xsl:param name="total_count"/>
		<!-- Get the position of the current TaxonEntry-->
		<xsl:param name="current_pos" select="position()"/>
		<!-- Display 2 taxa per row-->
		<!--     
	palatino italic on sci name
size -  14pts (Sci name )
size - 'Family' : bold 12 pt 
size  Family - 12pt
Common Name size - bold 18pt
disperser size -14 pt 
palatino roman

-->
		<xsl:if test="$current_pos mod 2 = 1">
			<fo:table-row>
				<xsl:variable name="coms">
					<xsl:if test="self::TaxonEntry/Items[@name=$com_names]">
						<xsl:for-each select="self::TaxonEntry/Items[@name=$com_names]/Item">
							<xsl:value-of select="."/>
							<xsl:value-of select="$constantString"/>
						</xsl:for-each>
					</xsl:if>
				</xsl:variable>
				<xsl:variable name="sd1">
					<xsl:if test="Items[@name=$sd]">
						<xsl:value-of select="Items[@name=$sd]/Item"/>
					</xsl:if>
				</xsl:variable>
				<xsl:variable name="pollin">
					<xsl:if test="Items[@name=$pollinator]">
						<xsl:value-of select="Items[@name=$pollinator]/Item"/>
					</xsl:if>
				</xsl:variable>
				<xsl:variable name="fam">
					<xsl:if test="Items[@name=$fam_name]">
						<xsl:value-of select="Items[@name=$fam_name]/Item"/>
					</xsl:if>
				</xsl:variable>
				<xsl:call-template name="output_cell">
					<xsl:with-param name="imageName" select="MediaResources[@name=$imageN]/MediaResource[1]"/>
					<xsl:with-param name="caption" select="Items[@name=$sci_name]/Item"/>
					<xsl:with-param name="com" select="$coms"/>
					<xsl:with-param name="fam" select="$fam"/>
					<xsl:with-param name="pollin" select="$pollin"/>
					<xsl:with-param name="sd" select="$sd1"/>
				</xsl:call-template>
				<!-- Check to see that we are not processing the last element. It is handled elsewhere-->
				<xsl:if test="not(number($current_pos) = number($total_count))">
					<xsl:variable name="coms1">
						<xsl:if test="following-sibling::TaxonEntry[1]/Items[@name=$com_names]">
							<xsl:for-each select="following-sibling::TaxonEntry[1]/Items[@name=$com_names]/Item">
								<xsl:value-of select="."/>
								<xsl:value-of select="$constantString"/>
							</xsl:for-each>
						</xsl:if>
					</xsl:variable>
					<xsl:call-template name="output_cell">
						<xsl:with-param name="imageName" select="following-sibling::TaxonEntry[1]/MediaResources[@name=$imageN]/MediaResource[1]"/>
						<xsl:with-param name="caption" select="following-sibling::TaxonEntry[1]/Items[@name=$sci_name]/Item"/>
						<xsl:with-param name="com" select="$coms1"/>
						<xsl:with-param name="fam" select="following-sibling::TaxonEntry[1]/Items[@name=$fam_name]/Item"/>
						<xsl:with-param name="pollin" select="following-sibling::TaxonEntry[1]/Items[@name=$pollinator]/Item"/>
						<xsl:with-param name="sd" select="following-sibling::TaxonEntry[1]/Items[@name=$sd]/Item"/>
					</xsl:call-template>
				</xsl:if>
			</fo:table-row>
		</xsl:if>
	</xsl:template>
	<xsl:template match="/">
		<fo:root xmlns:fo="http://www.w3.org/1999/XSL/Format">
			<fo:layout-master-set>
				<fo:simple-page-master master-name="A4" page-height="27.8cm" page-width="22.1cm">
					<!--	<fo:region-before extent="0.9cm"/>-->
					<fo:region-body margin-top="0.9cm" margin-bottom="0.9cm" margin-left="0.9cm" margin-right="0.9cm"/>
					<!--  <fo:region-after extent="0.9cm"/> -->
				</fo:simple-page-master>
			</fo:layout-master-set>
			<fo:page-sequence master-reference="A4" initial-page-number="1" language="en" country="us">
				<!--
			 Write a title on top of each pdf page
			-->
				<fo:static-content flow-name="xsl-region-before">
					<fo:block white-space-collapse="false" linefeed-treatment="preserve" text-align="center">
						Labels For Willow
					</fo:block>
				</fo:static-content>
				<!--
			 	Write a page number,centered in the middle, at the bottom of each page
			-->
				<fo:static-content flow-name="xsl-region-after">
		
				</fo:static-content>
				<fo:flow flow-name="xsl-region-body">
					<fo:table text-align="center">
						<fo:table-column column-width="8.85cm"/>
						<fo:table-column column-width="8.85cm"/>
						<fo:table-body>
						<xsl:variable name="total_count" select="count(//TaxonEntry)"/>
							<xsl:apply-templates select="//TaxonEntry">
								<xsl:with-param name="total_count" select="$total_count"/>
							</xsl:apply-templates>
						</fo:table-body>
					</fo:table>
				</fo:flow>
			</fo:page-sequence>
		</fo:root>
	</xsl:template>
</xsl:stylesheet>
